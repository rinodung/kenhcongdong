<?php

/***************************************************************************
 *
 * 	----------------------------------------------------------------------
 * 						DO NOT EDIT THIS FILE
 *	----------------------------------------------------------------------
 * 
 *  			Original built by Darcy Clarke. http://themify.me
 * 				Extended by Elio Rivero.
 *  				Copyright (C) 2010 Themify
 * 
 *	----------------------------------------------------------------------
 *
 ***************************************************************************/

/* 	Setting Modules
/***************************************************************************/
	
	///////////////////////////////////////////
	// Site Logo
	///////////////////////////////////////////
	function themify_site_logo($data=array()){
		if($data['attr']['target'] != ''){
			$target = "<span class='hide target'>".$data['attr']['target']."</span>";	
		}
		$data = themify_get_data();
		if($data['setting-site_logo'] == "image"){
			$image = "checked='checked'";
			$image_display = "style='display:block;'";
			$text_display = "style='display:none;'";
		} else {
			$text = "checked='checked'";	
			$text_display = "style='display:block;'";
			$image_display = "style='display:none;'";
		}
		return '<div class="themify_field_row">
					<span class="label">'. __('Display', 'themify') .'</span> 
						<input name="setting-site_logo" type="radio" value="text" '.$text.' /> ' . __('Site Title', 'themify') . ' 
						<input name="setting-site_logo" type="radio" value="image" '.$image.' /> ' . __('Image', 'themify') . '
					</span>
					'.$target.'
					<div class="uploader-fields image" '.$image_display.'>
						<input type="text" id="setting-site_logo" class="width10" name="setting-site_logo_image_value" value="'.$data['setting-site_logo_image_value'].'" />
						<div class="clear image" '.$image_display.'>' . themify_get_uploader('setting-site_logo', array('tomedia' => true)) . '</div>
					</div>
					<span class="pushlabel clear image" '.$image_display.'>
						<input type="text" name="setting-site_logo_width" class="width2" value="'.$data['setting-site_logo_width'].'" /> ' . __('width', 'themify') . ' 
						<input type="text" name="setting-site_logo_height" class="width2" value="'.$data['setting-site_logo_height'].'" /> ' . __('height', 'themify') . '
					</span>
				</div>';
	}
	
	///////////////////////////////////////////
	// Favicon Module
	///////////////////////////////////////////
	function themify_favicon($data=array()){
		if($data['attr']['target'] != ''){
			$target = "<span class='hide target'>".$data['attr']['target']."</span>";	
		}
		$data = themify_get_data();
		return '<div class="themify_field_row">
					<span class="label">'. __('Custom Favicon', 'themify') . '</span>
					<input id="setting-favicon" type="text" class="width10" name="setting-favicon" value="'.$data['setting-favicon'].'" /> <br />
					'.$target.'
					<span class="pushlabel" style="display:block;">
						' . themify_get_uploader('setting-favicon', array('tomedia' => true)) . '
					</span>
				</div>';
	}

	///////////////////////////////////////////
	// Favicon Module - Action
	///////////////////////////////////////////
	function themify_favicon_action($data=array()){
		$data = themify_get_data();
		if($data['setting-favicon'] != ""){
			$favurl = themify_https_esc($data['setting-favicon']);
			echo "\n\n".'<link href="'.$favurl.'" rel="shortcut icon" /> ';
		}
	}
	add_action('wp_head', 'themify_favicon_action');
	add_action('admin_head', 'themify_favicon_action');
	
	///////////////////////////////////////////
	// Custom Feed URL Module
	///////////////////////////////////////////
	function themify_custom_feed_url($data=array()){
		$data = themify_get_data();
		return '<p><span class="label">' . __('Custom Feed URL', 'themify') . '</span> <input type="text" class="width10" name="setting-custom_feed_url" value="'.$data['setting-custom_feed_url'].'" /> <br />
					<span class="pushlabel"><small>e.g. http://feedburner.com/userid</small></span></p>';
	}
	
	///////////////////////////////////////////
	// Custom Feed URL Module - Action
	///////////////////////////////////////////
	function themify_custom_feed_url_action($data=array()){
		$data = themify_get_data();
		if($data['setting-custom_feed_url'] != ""){
			echo "\n\n".'<meta name="description" content="'.$data['setting-custom_feed_url'].'" /> ';
		}
	}
	add_action('wp-admin','themify_custom_feed_url_action');
	
	///////////////////////////////////////////
	// Meta Description Module
	///////////////////////////////////////////
	function themify_meta_description($data=array()){
		$data = themify_get_data();
		return '<p><textarea type="text" name="setting-meta_description" class="widthfull" rows="4">'.$data['setting-meta_description'].'</textarea></p>';	
	}
	
	///////////////////////////////////////////
	// Meta Description Module - Action
	///////////////////////////////////////////
	function themify_meta_description_action($data=array()){
		$data = themify_get_data();
		if($data['setting-meta_description'] != ""){
			echo "\n\n".'<meta name="description" content="'.$data['setting-meta_description'].'" /> ';
		}
	}
	add_action('wp-admin','themify_meta_description_action');
	
	///////////////////////////////////////////
	// Header HTML Module
	///////////////////////////////////////////
	function themify_header_html($data=array()){
		$data = themify_get_data();
		return '<p>' . __('The following code will add to the &lt;head&gt; tag.', 'themify') . '</p>
					<p><textarea class="widthfull" rows="10" name="setting-header_html">'.$data['setting-header_html'].'</textarea><br />
					<small>' . __('Useful if you need to add additional scripts such as CSS or JS.', 'themify') . '</small></p>';	
	}
	
	///////////////////////////////////////////
	// Header HTML Module - Action
	///////////////////////////////////////////
	function themify_header_html_action($data=array()){
		$data = themify_get_data();
		echo "\n\n".$data['setting-header_html'];
	}
	add_action('wp_head','themify_header_html_action');
	
	///////////////////////////////////////////
	// Footer HTML Module
	///////////////////////////////////////////
	function themify_footer_html($data=array()){
		$data = themify_get_data();
		return '<p>' . __('The following code will be added to the footer before the closing &lt;/body&gt; tag.', 'themify') . '</p>
					<p><textarea type="text" class="widthfull" rows="10" name="setting-footer_html">'.$data['setting-footer_html'].'</textarea><br />
					<small>' . __('Useful if you need to Javascript or tracking code.', 'themify') . '</small></p>';
	}
	
	///////////////////////////////////////////
	// Footer HTML Module - Action
	///////////////////////////////////////////
	function themify_footer_html_action($data=array()){
		$data = themify_get_data();
		echo "\n\n".$data['setting-footer_html'];
	}
	add_action('wp_footer','themify_footer_html_action');
	
		
	///////////////////////////////////////////
	// Custom CSS Module
	///////////////////////////////////////////
	function themify_custom_css($data=array()){
		$data = themify_get_data();
		return '<p><textarea class="widthfull" rows="35" name="setting-custom_css">'.$data['setting-custom_css'].'</textarea><br /></p>';	
	}
	///////////////////////////////////////////
	// Custom CSS Module - Action
	///////////////////////////////////////////
	function themify_custom_css_action($data=array()){
		$data = themify_get_data();
		if( isset($data['setting-custom_css']) && ( '' != $data['setting-custom_css'] ) )
			echo "\n\n<!-- custom css -->\n\n<style type='text/css'>".$data['setting-custom_css']."</style>";
	}
	add_action('wp_head','themify_custom_css_action');
	
	///////////////////////////////////////////
	// Search Settings Module
	///////////////////////////////////////////
	function themify_search_settings($data=array()){
		$data = themify_get_data();
		if($data['setting-search_settings_exclude']){
			$checked = "checked='checked'";	
		}
		return '<p>
					<span class="label">' . __('Search in Category IDs', 'themify') . ' </span>
					<input type="text" class="width6" name="setting-search_settings" value="'.$data['setting-search_settings'].'" />
				</p>
				<p>
					<span class="pushlabel"><small>' . __('Use minus sign (-) to exclude categories.', 'themify') . '</small></span><br />
					<span class="pushlabel"><small>' . __('Example: (1,4,-7) = search only in Category 1 &amp; 4, and exclude Category 7.', 'themify') . '</small></span>
				</p>
				<p>
					<span class="pushlabel"><input type="checkbox" name="setting-search_settings_exclude" '.$checked.'/> ' . __('Exclude Pages in search results', 'themify') . '</span>
				</p>';
	}
	
	///////////////////////////////////////////
	// Search Settings Module - Action 
	///////////////////////////////////////////
	function themify_search_settings_action($query){
		if( !is_admin() ){
			$data = themify_get_data();
			if($query->is_search){
				if($data['setting-search_settings'] != ""){
					$query->set('cat',$data['setting-search_settings']);
				}
				if($data['setting-search_settings_exclude']){
					$types = get_post_types();
					unset($types['page']);
					if( $query->query_vars['post_type'] != 'product' ){
						$query->set('post_type', $types);
			    }
				}
			}
		}
		return $query;
	}
	add_filter('pre_get_posts','themify_search_settings_action');
	
	///////////////////////////////////////////
	// RSS Feed Settings Module
	///////////////////////////////////////////
	function themify_feed_settings($data=array()){
		$data = themify_get_data();
		if(themify_check('setting-exclude_img_rss')){
			$checked_use = "checked='checked'";
		}
		return '<p><span class="label">' . __('Feed Category', 'themify') . '</span> <input type="text" class="width6" name="setting-feed_settings" value="'.$data['setting-feed_settings'].'" /></p>
				<p>
					<span class="pushlabel"><small>' . __('Use minus sign (-) to exclude categories.', 'themify') . '</small></span><br />
					<span class="pushlabel"><small>' . __('Example: (2,-9) = include only Category 2 in feeds and exclude Category 9.', 'themify') . '</small></span>
				</p>
				<p><span class="label">' . __('Post Image in RSS', 'themify') . '</span> <input type="checkbox" name="setting-exclude_img_rss" '.$checked_use.'/> ' . __('Exclude featured image in RSS feeds', 'themify') . '</p>
				<p>
					<span class="pushlabel"><small>' . __('Check this to exclude post image in RSS feeds', 'themify') . '</small></span>
				</p>
					';	
	}
	
	///////////////////////////////////////////
	// RSS Feed Settings Module - Action
	///////////////////////////////////////////
	function themify_feed_settings_action($query){
		$data = themify_get_data();
		if($query->is_feed){
			if(isset($data['setting-feed_settings'])){
				$query->set('cat',$data['setting-feed_settings']);	
			}
		}
		return $query;
	}
	add_filter('pre_get_posts','themify_feed_settings_action');

	///////////////////////////////////////
	// Filter RSS Feed to include post image - Action
	///////////////////////////////////////
	$themify_data = themify_get_data();
	if( '' == $themify_data['setting-exclude_img_rss'] ){
       add_filter('the_content', 'themify_custom_fields_for_feeds');
       
       /* Firefox doesn't render images to feed when select full text from admin > Settings > Reading But IE does automatically for full text.
       So this code below will be used by firefox only to render/fetch images in feed. If we use for all then it will show images 2 times. */
       
       $useragent = $_SERVER['HTTP_USER_AGENT'];
       if(preg_match('|Firefox/([0-9\.]+)|',$useragent))
       {
           add_filter('the_excerpt_rss', 'themify_custom_fields_for_feeds');
           add_filter('the_content_feed', 'themify_custom_fields_for_feeds');
       }
       
       function themify_custom_fields_for_feeds( $content ) {
   
           global $post, $id, $themify_check;
           if(!is_feed() || $themify_check == true){
               return $content;
           }
   
           if(themify_check('post_image')) {
               $content .= "<p><img src='".themify_get('post_image')."'></p>";
           }
           $themify_check = false;
           return $content;
       }
     }
	
	///////////////////////////////////////////
	// Img Version / Settings
	///////////////////////////////////////////
	function themify_img_settings($data=array()){
		
		/*** Img.php Crop Option Array ***/
		$options = array(
			array("value" => "c", "name" => __('Center', 'themify')),
			array("value" => "t", "name" => __('Top', 'themify')),
			array("value" => "tr",	"name" => __('Top Right', 'themify')),
			array("value" => "tl",	"name" => __('Top Left', 'themify')),
			array("value" => "b",	"name" => __('Bottom', 'themify')),
			array("value" => "br",	"name" => __('Bottom Right', 'themify')),
			array("value" => "bl",	"name" => __('Bottom Left', 'themify')),
			array("value" => "l",	"name" => __('Left', 'themify')),
			array("value" => "r",	"name" => __('Right', 'themify'))
		);
		$options_vertical = array(
			array('name'=> '',					 'value' => ''),
			array('name'=> __('Yes', 'themify'), 'value' => 'yes'),
			array('name'=> __('No', 'themify'),	 'value' => 'no')
		);
		$feature_sizes = array(
			array( 'value' => 'blank', 'name' => '' ),
			array( 'value' => 'thumbnail', 'name' => __('Thumbnail', 'themify') ),
			array( 'value' => 'medium', 'name' => __('Medium', 'themify') ),
			array( 'value' => 'large', 'name' => __('Large', 'themify') ),
			array( 'value' => 'full', 'name' => __('Original Image', 'themify') )
		);
		if(themify_check('setting-img_settings_use')){
			$checked_use = "checked='checked'";
		}
		if(themify_check('setting-img_settings_legacy')){
			$checked_legacy = "checked='checked'";
		}
		$output = '<div class="module">
				<div class="label">img.php</div> 
				<div class="row">
					<input type="checkbox" class="disable_img_php" name="setting-img_settings_use" '.$checked_use.'/> ' . __('Disable img.php globally', 'themify') . '<br/>
					<small>' . __('(WordPress Featured Image or original images will be used)', 'themify') . '</small>
					<br/>
				</div>
			<!-- BEGIN Show if img.php is enabled -->
			<div class="show_if_enabled_img_php">
				<div class="label">' . __('Image Quality', 'themify') . '</div> 
				<div class="row">
					<input class="width2" type="text" name="setting-img_settings_quality" value="'.themify_get('setting-img_settings_quality').'"> <small>' . __('max 100 (higher = better quality, but bigger file size)', 'themify') . '</small>
				</div>

				<div class="label">' . __('Cropping Alignment', 'themify') . '</div> 
				<div class="row">
					
					<select name="setting-img_settings_crop_option"><option></option>';
					foreach($options as $option){
						if($option['value'] == themify_get('setting-img_settings_crop_option')){
							$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';
						} else {
							$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';
						}
					}
		$output .= '</select></div>
				 <div class="label">' . __('Vertical Cropping', 'themify') . '</div> 
				<div class="row">
					
					<select name="setting-img_settings_vertical_crop_option">';
					foreach($options_vertical as $option_vertical){
						if($option_vertical['value'] == themify_get('setting-img_settings_vertical_crop_option')){
							$output .= '<option value="'.$option_vertical['value'].'" selected="selected">'.$option_vertical['name'].'</option>';
						} else {
							$output .= '<option value="'.$option_vertical['value'].'">'.$option_vertical['name'].'</option>';
						}
					}
		$output .= '</select> <small>' . __('(Select \'no\' to disable vertical cropping globally)', 'themify') . '</small></div>
		</div>
		<!-- END Show if img.php is enabled -->
				 </div>';
				 
		return $output;
	}

	
/* 	Styling Modules
/***************************************************************************/	
	
	///////////////////////////////////////////
	// Divider Module
	///////////////////////////////////////////
	function themify_divider($data=array()){
		return '<hr/>';
	}
	
	///////////////////////////////////////////
	// Image Preview Module
	///////////////////////////////////////////
	function themify_image_preview($data=array()){
		global $config;
		$temp = themify_get_data();
		//Get currently selected preset
		$savedpath = $temp['styling-'.$data['category'].'-'.$data['title'].'-background_image-value-value'];
		
		//Begin presets block
		$output = '<div class="preset">';
		//delete_option('themify_background_presets'); // FOR TESTING PURPOSES
		//Check to see if we have already loaded the presets
		$presets = get_option('themify_background_presets');
		//var_dump($presets);
		if( false == $presets ){
			//if presets were not loaded, create a variable to store them
			$presets = array();

			//Presets first time
			if($data['attr']['src'] != ""){
				$img_folders = array(0 => array('_a' => array('src' => $data['attr']['src']))); 	
			} else {
				$img_folders = $config['folders']['_c']['images'];	
			}
			if(is_array($img_folders)){
				if(isset($img_folders['_a']['src'])){
					$folder = $folder['_a']['src'];
					if(is_dir(THEME_DIR.'/'.$folder)){
						if($handle = opendir(THEME_DIR.'/'.$folder)) {
							while (false !== ($file = readdir($handle))) {
								$ext = substr(strrchr($file, '.'), 1);
								if($ext == 'jpg' || $ext == 'gif' || $ext == 'png'){
									$fullpath = get_bloginfo('template_directory')."/".$folder.$file;
									$is_selected = trim($fullpath) == trim($savedpath)? 'selected': '';
									$output .= '<a href="#" title="'.$folder.$file.'"><span title="'.$folder.$file.'"></span>
										<img src="'.$fullpath.'" alt="'.$fullpath.'" class="backgroundThumb '.$is_selected.'" /></a>';
									$presets[sanitize_file_name($file)] = $fullpath; 
								}
							}
							closedir($handle);
						}
					}
				} else {
					foreach($img_folders as $folder){
						$folder = $folder['_a']['src'];
						if(is_dir(THEME_DIR.'/'.$folder)){
							if($handle = opendir(THEME_DIR.'/'.$folder)) {
								while (false !== ($file = readdir($handle))) {
									$ext = substr(strrchr($file, '.'), 1);
									if($ext == 'jpg' || $ext == 'gif' || $ext == 'png'){
										$fullpath = get_bloginfo('template_directory')."/".$folder.$file;
										$is_selected = trim($fullpath) == trim($savedpath)? 'selected': '';
										$output .= '<a href="#" title="'.$folder.$file.'"><span title="'.$folder.$file.'"></span>
										<img src="'.$fullpath.'" alt="'.$fullpath.'" class="backgroundThumb ' . $is_selected . '" /></a>';
										$output .= '<input type="hidden" name="preset' . sanitize_file_name($file) . '" value="' . $fullpath . '" />';
										$presets[sanitize_file_name($file)] = $fullpath;
									}
								}		
								closedir($handle);
							}
						}
					}
				}
			}
			//Presets first time END
			//var_dump($presets); //remove this!
			update_option( 'themify_background_presets', $presets );
		}
		else {
			//we have already stored our presets so go ahead and show them
			foreach ($presets as $file => $fullpath) {
				$is_selected = trim($fullpath) == trim($savedpath)? 'selected': '';
				$output .= '<a href="#" title="' . basename($file) . '"><span title="' . $file . '"></span><img src="' . $fullpath . '" alt="' . $fullpath . '" class="backgroundThumb ' . $is_selected . '" /></a>';
			}			
		}
		
		//End presets block
		$output .= '</div>';		
		return $output;
	}
	
	///////////////////////////////////////////
	// Background Image Module
	///////////////////////////////////////////
	function themify_background_image($data=array()){	
		if($data['attr']['target'] != ''){
			$target = "<span class='hide target'>".$data['attr']['target']."</span>";	
		}
		$data['value'] = $data['value']['value'];
		$none_checked = "";
		if($data['value']['none']){
			$none_checked = "checked='checked'";
		}
		$output .= '<div class="themify_field_row background_image">
						<span class="label">' . __('Background-image', 'themify') . '</span> 
						'.$target.'
						<input type="text" name="styling-'.$data['category'].'-'.$data['title'].'-background_image-value-value" class="width8 upload-file" id="styling-'.$data['category'].'-'.$data['title'].'-background_image" value="'.$data['value']['value'].'" />
						<input type="checkbox" name="styling-'.$data['category'].'-'.$data['title'].'-background_image-value-none" '.$none_checked.' /> ' . __('No BG image', 'themify') . '<br /> 
						<div class="pushlabel" style="display:block;">
							'. 
			themify_get_uploader(
				'styling-'.$data['category'].'-'.$data['title'].'-background_image',
				array('preset' => true)
			)
							 . '
						</div>
					</div>';		
		return $output;
	}
	
	///////////////////////////////////////////
	// Background Color Module
	///////////////////////////////////////////
	function themify_background_color($data=array()){
		$data['value'] = $data['value']['value'];
		if($data['value']['transparent']){
			$output = '<p class="background_color">
						<span class="label">' . __('Background-color', 'themify') . '</span> 
						<span class="colorSelect" style=""><span></span></span> <input type="text" disabled name="styling-'.$data['category'].'-'.$data['title'].'-background_color-value-value" class="width4" /> 
						<input type="checkbox" checked="checked" name="styling-'.$data['category'].'-'.$data['title'].'-background_color-value-transparent" class="colorTransparent" /> ' . __('Transparent', 'themify') . '
					</p>';
		} else {
			$output = '<p>
						<span class="label">' . __('Background-color', 'themify') . '</span> 
						<span class="colorSelect "style="background-color:#'.$data['value']['value'].';"><span></span></span> <input type="text" name="styling-'.$data['category'].'-'.$data['title'].'-background_color-value-value" value="'.$data['value']['value'].'" class="colorSelectInput width4" /> 
						<input type="checkbox" name="styling-'.$data['category'].'-'.$data['title'].'-background_color-value-transparent" class="colorTransparent" /> ' . __('Transparent', 'themify') . '
					</p>';
		}
		return $output;
	}
	
	///////////////////////////////////////////
	// Background Repeat Module
	///////////////////////////////////////////
	function themify_background_repeat($data=array()){
		$data['value'] = $data['value']['value'];
		//$options = array('repeat', 'repeat-x','repeat-y','no-repeat');
		$options = array(
				array(
					'value' => 'repeat',
					'name' => __('Repeat', 'themify')
				),
				array(
					'value' => 'repeat-x',
					'name' => __('Repeat X', 'themify')
				),
				array(
					'value' => 'repeat-y',
					'name' => __('Repeat Y', 'themify')
				),
				array(
					'value' => 'no-repeat',
					'name' => __('Do not repeat', 'themify')
				)
			);
		$output = '<p><span class="label">' . __('Background-repeat', 'themify') . '</span>
					<select name="styling-'.$data['category'].'-'.$data['title'].'-background_repeat-value-value"><option> </option>';
		foreach($options as $option){
			if($option['value'] == $data['value']['value']){
				$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';
			} else {
				$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';
			}
		}
		$output .=	'</select></p>';	
		return $output;
	}
	
	///////////////////////////////////////////
	// Background Position Module
	///////////////////////////////////////////
	function themify_background_position($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array(
				array(
					'value' => 'left',
					'name' => __('Left', 'themify')
				),
				array(
					'value' => 'center',
					'name' => __('Center', 'themify')
				),
				array(
					'value' => 'right',
					'name' => __('Right', 'themify')
				)
			);
		$output = '	<p><span class="label">' . __('Background-position', 'themify') . '</span> 
					<select class="background_position positionX"><option> </option>';
		foreach($options as $option){
			if($option['value'] == $data['value']['x']){
				$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
			} else {
				$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
			}
		}
		$output .= '</select>
					<span class="value" style="display:none;">
						<input type="text" name="styling-'.$data['category'].'-'.$data['title'].'-background_position-value-x" value="'.$data['value']['x'].'" class="valueX">
					</span>';
		
		$options = array(
			array(
				'value' => 'top',
				'name' => __('Top', 'themify')
			),
			array(
				'value' => 'center',
				'name' => __('Center', 'themify')
			),
			array(
				'value' => 'bottom',
				'name' => __('Bottom', 'themify')
			)
		);
		$output .= '<select class="background_position positionY"><option> </option>';
		
		foreach($options as $option){
			if($option['value'] == $data['value']['y']){
				$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
			} else {
				$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
			}
		}
		$output .= '</select>
					<span class="value" style="display:none;">
						<input type="text" name="styling-'.$data['category'].'-'.$data['title'].'-background_position-value-y" value="'.$data['value']['y'].'" class="valueY">
					</span>
					</p>';
					
		return $output;
	}
	
	///////////////////////////////////////////
	// Font Family Module
	///////////////////////////////////////////
	function themify_font_family($data=array()){
		$data['value'] = $data['value']['value'];
		$fonts = array("Arial, Helvetica, sans-serif",
						"Verdana, Geneva, sans-serif",
						"Georgia, \"Times New Roman\", Times, serif",
						"\"Times New Roman\", Times, serif",
						"Tahoma, Geneva, sans-serif",
						"\"Trebuchet MS\", Arial, Helvetica, sans-serif",
						"Palatino, \"Palatino Linotype\", \"Book Antiqua\", serif",
						"\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif");
		$output .= '<p><span class="label">' . __('Font family', 'themify') . '</span> 
					<select class="fontFamily" name="styling-'.$data['category'].'-'.$data['title'].'-font_family-value-value"><option> </option>';
		foreach($fonts as $font){
			if($font == $data['value']['value']){
				$check = true;
				$output .= '<option value=\''.$font.'\' selected="selected">'.$font.'</option>';
			} else {
				$output .= '<option value=\''.$font.'\'>'.$font.'</option>';	
			}
		}
		$output .= '</select></p>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Font Size Module
	///////////////////////////////////////////
	function themify_font_size($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array('px','em','%');
		$output .= '<p><span class="label">' . __('Font-size', 'themify') . '</span> 
					<input type="text" class="width2 valid_num" name="styling-'.$data['category'].'-'.$data['title'].'-font_size-value-value" value="'.$data['value']['value'].'" />
					<select name="styling-'.$data['category'].'-'.$data['title'].'-font_size-value-unit"><option> </option>';
		foreach($options as $option){
			if($option == $data['value']['unit']){
				$output .= '<option value="'.$option.'" selected="selected">'.$option.'</option>';
			} else {
				$output .= '<option value="'.$option.'">'.$option.'</option>';
			}
		}
		$output .=	'</select></p>';	
		return $output;
	}
	
	///////////////////////////////////////////
	// Font Weight Module
	///////////////////////////////////////////
	function themify_font_weight($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array(
			array(
				'value' => 'normal',
				'name' => __('Normal', 'themify')
			),
			array(
				'value' => 'bold',
				'name' => __('Bold', 'themify')
			)
		);
		$output = '<p><span class="label">' . __('Font-weight', 'themify') . '</span> <select  name="styling-'.$data['category'].'-'.$data['title'].'-font_weight-value-value"><option> </option>';
		foreach($options as $option){
			if($option['value'] == $data['value']['value']){
				$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
			} else {
				$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
			}
		}
		$output .= '</select></p>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Font Style Module
	///////////////////////////////////////////
	function themify_font_style($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array(
			array(
				'value' => 'normal',
				'name' => __('Normal', 'themify')
			),
			array(
				'value' => 'italic',
				'name' => __('Italic', 'themify')
			)
		);
		$output = '<p><span class="label">' . __('Font-Style', 'themify') . '</span> <select name="styling-'.$data['category'].'-'.$data['title'].'-font_style-value-value"><option> </option>';
		foreach($options as $option){
			if($option['value'] == $data['value']['value']){
				$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
			} else {
				$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
			}
		}
		$output .= '</select></p>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Font Variant Module
	///////////////////////////////////////////
	function themify_font_variant($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array(
			array(
				'value' => 'normal',
				'name' => __('Normal', 'themify')
			),
			array(
				'value' => 'small-caps',
				'name' => __('Small Caps', 'themify')
			)
		);
		$output = '<p><span class="label">' . __('Font-variant', 'themify') . '</span> <select name="styling-'.$data['category'].'-'.$data['title'].'-font_variant-value-value"><option> </option>';
		foreach($options as $option){
			if($option['value'] == $data['value']['value']){
				$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
			} else {
				$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
			}
		}
		$output .= '</select></p>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Line Height Module
	///////////////////////////////////////////
	function themify_line_height($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array('px','em','%');
		$output = '	<p><span class="label">' . __('Line-height', 'themify') . '</span>
					<input type="text" class="width2 valid_num"  name="styling-'.$data['category'].'-'.$data['title'].'-line_height-value-value" value="'.$data['value']['value'].'" /><select name="styling-'.$data['category'].'-'.$data['title'].'-line_height-value-unit"><option> </option>';
		foreach($options as $option){
			if($option == $data['value']['unit']){
				$output .= '<option value="'.$option.'" selected="selected">'.$option.'</option>';	
			} else {
				$output .= '<option value="'.$option.'">'.$option.'</option>';	
			}
		}
		$output .= '</select></p>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Text Transform Module
	///////////////////////////////////////////
	function themify_text_transform($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array(
			array(
				'value' => 'capitalize',
				'name' => __('Capitalize', 'themify')
			),
			array(
				'value' => 'uppercase',
				'name' => __('Uppercase', 'themify')
			),
			array(
				'value' => 'lowercase',
				'name' => __('Lowercase', 'themify')
			),
			array(
				'value' => 'none',
				'name' => __('None', 'themify')
			)
		);
		$output = '	<p><span class="label">' . __('Text-transform', 'themify') . '</span> <select name="styling-'.$data['category'].'-'.$data['title'].'-text_transform-value-value"><option> </option>';
		foreach($options as $option){
			if($option['value'] == $data['value']['value']){
				$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
			} else {
				$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
			}
		}
		$output .= '</select></p>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Text Decoration Module
	///////////////////////////////////////////
	function themify_text_decoration($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array(
			array(
				'value' => 'underline',
				'name' => __('Underline', 'themify')
			),
			array(
				'value' => 'overline',
				'name' => __('Overline', 'themify')
			),
			array(
				'value' => 'line-through',
				'name' => __('Line through', 'themify')
			),
			array(
				'value' => 'none',
				'name' => __('None', 'themify')
			)
		);
		$output = '	<p><span class="label">' . __('Text-decoration', 'themify') . '</span> <select name="styling-'.$data['category'].'-'.$data['title'].'-text_decoration-value-value"><option> </option>';
		foreach($options as $option){
			if($option['value'] == $data['value']['value']){
				$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
			} else {
				$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
			}
		}
		$output .= '</select></p>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Font Color Module
	///////////////////////////////////////////
	function themify_color($data=array()){
		$data['value'] = $data['value']['value'];
		return '<p><span class="label">' . __('Color', 'themify') . '</span> <span class="colorSelect" style="background:#'.$data['value']['value'].';"><span></span></span> <input type="text" class="colorSelectInput width4" value="'.$data['value']['value'].'" name="styling-'.$data['category'].'-'.$data['title'].'-color-value-value" /></p>';
	}
	
	///////////////////////////////////////////
	// Padding Module
	///////////////////////////////////////////
	function themify_padding($data=array()){
		$data['value'] = $data['value']['value'];
		if($data['value']['checkbox']){
			$checked = "checked='checked'";
			$individuals = "style='display:none;'";	
		} else {
			$same = "style='display:none;'";
		}
		$output .= '<div>
						<p>
							<span class="label">' . __('Padding', 'themify') . '</span>
							<span class="same" '.$same.'>
								<input type="text" class="width2 valid_num" name="styling-'.$data['category'].'-'.$data['title'].'-padding-value-same" value="'.$data['value']['same'].'" /> <small>px</small>
							</span>
							<span class="individuals" '.$individuals.'>
								<input type="text" class="width2 valid_num" name="styling-'.$data['category'].'-'.$data['title'].'-padding-value-top" value="'.$data['value']['top'].'" /> top 
								<input type="text" class="width2 valid_num" name="styling-'.$data['category'].'-'.$data['title'].'-padding-value-right" value="'.$data['value']['right'].'" /> right 
								<input type="text" class="width2 valid_num"  name="styling-'.$data['category'].'-'.$data['title'].'-padding-value-bottom" value="'.$data['value']['bottom'].'"/> bottom 
								<input type="text" class="width2 valid_num" name="styling-'.$data['category'].'-'.$data['title'].'-padding-value-left" value="'.$data['value']['left'].'" /> left <small>(px)</small>
							</span>
						</p>
						<p>
							<span class="pushlabel" style="display:block;">
								<input type="checkbox" name="styling-'.$data['category'].'-'.$data['title'].'-padding-value-checkbox" class="padding-switch" '.$checked.' /> ' . __('Same for all', 'themify') . ' 
							</span>
						</p>
					</div>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Margin Module
	///////////////////////////////////////////
	function themify_margin($data=array()){
		$data['value'] = $data['value']['value'];
		if($data['value']['checkbox']){
			$checked = "checked='checked'";
			$individuals = "style='display:none;'";	
		} else {
			$same = "style='display:none;'";
		}
		$output .= '<div>
						<p>
							<span class="label">' . __('Margin', 'themify') . '</span>';
		$output .= '<span class="same" '.$same.'>
						<input type="text" class="width2 valid_num" name="styling-'.$data['category'].'-'.$data['title'].'-margin-value-same" value="'.$data['value']['same'].'" /> <small>px</small>
					</span>
					<span class="individuals" '.$individuals.'>
						<input type="text" class="width2 valid_num" name="styling-'.$data['category'].'-'.$data['title'].'-margin-value-top" value="'.$data['value']['top'].'" /> top 
						<input type="text" class="width2 valid_num" name="styling-'.$data['category'].'-'.$data['title'].'-margin-value-right" value="'.$data['value']['right'].'" /> right 
						<input type="text" class="width2 valid_num"  name="styling-'.$data['category'].'-'.$data['title'].'-margin-value-bottom" value="'.$data['value']['bottom'].'"/> bottom 
						<input type="text" class="width2 valid_num" name="styling-'.$data['category'].'-'.$data['title'].'-margin-value-left" value="'.$data['value']['left'].'" /> left <small>(px)</small>
					</span>
				</p>
				<p>
					<span class="pushlabel" style="display:block;">
						<input type="checkbox" name="styling-'.$data['category'].'-'.$data['title'].'-margin-value-checkbox" '.$checked.' class="margin-switch" /> ' . __('Same for all', 'themify') . ' 
					</span>
				</p>
			</div>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Height Module
	///////////////////////////////////////////
	function themify_height($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array('px','em','%');
		$output = '	<p><span class="label">' . __('Height', 'themify') . '</span> 
					<input type="text" class="width2 valid_num" value="'.$data['value']['value'].'" name="styling-'.$data['category'].'-'.$data['title'].'-height-value-value" />  
					<select name="styling-'.$data['category'].'-'.$data['title'].'-height-value-unit"><option> </option>';
		foreach($options as $option){
			if($option == $data['value']['unit']){
				$output .= '<option value="'.$option.'" selected="selected">'.$option.'</option>';	
			} else {
				$output .= '<option value="'.$option.'">'.$option.'</option>';	
			}
		}
		$output .= '</select></p>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Width Module
	///////////////////////////////////////////
	function themify_width($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array('px','em','%');
		$output = '	<p><span class="label">' . __('Width', 'themify') . '</span> 
					<input type="text" class="width2 valid_num" value="'.$data['value']['value'].'" name="styling-'.$data['category'].'-'.$data['title'].'-width-value-value" />  
					<select name="styling-'.$data['category'].'-'.$data['title'].'-width-value-unit"><option> </option>';
		foreach($options as $option){
			if($option == $data['value']['unit']){
				$output .= '<option value="'.$option.'" selected="selected">'.$option.'</option>';	
			} else {
				$output .= '<option value="'.$option.'">'.$option.'</option>';	
			}
		}
		$output .= '</select></p>';
		return $output;
	}
	
	///////////////////////////////////////////
	// Border Module
	///////////////////////////////////////////
	function themify_border($data=array()){
		$data['value'] = $data['value']['value'];
		if($data['value']['checkbox']){
			$checked = "checked='checked'";
			$individuals = "style='display:none;'";	
		} else {
			$same = "style='display:none;'";
		}
		$options = array(
			array(
				'value' => 'solid',
				'name' => __('Solid', 'themify')
			),
			array(
				'value' => 'dashed',
				'name' => __('Dashed', 'themify')
			),
			array(
				'value' => 'dotted',
				'name' => __('Dotted', 'themify')
			),
			array(
				'value' => 'double',
				'name' => __('Double', 'themify')
			)
		);
		$output = '<div><p>
						<span class="label">' . __('Border', 'themify') . '</span> 
						<span class="same" '.$same.'>
							<span class="colorSelect" style="background-color:#'.$data['value']['same_color'].'"><span></span></span>  <input type="text" value="'.$data['value']['same_color'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-same_color" class="width4 colorSelectInput" /> 
							<input type="text" class="width2 valid_num" value="'.$data['value']['same'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-same" /> <small>px</small> 
							<select name="styling-'.$data['category'].'-'.$data['title'].'-border-value-same_style"><option> </option>';
							foreach($options as $option){
								if($option['value'] == $data['value']['same_style']){
									$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
								} else {
									$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
								}
							}
		$output .= '		</select>
						</span>
						<span class="individuals" '.$individuals.'>
						<span class="borders">
							<span class="colorSelect" style="background-color:#'.$data['value']['top_color'].';"><span></span></span> <input type="text" value="'.$data['value']['top_color'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-top_color" class="width4 colorSelectInput" /> 
							<input type="text" class="width2 valid_num" value="'.$data['value']['top'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-top" /> <small>px</small>
							<select name="styling-'.$data['category'].'-'.$data['title'].'-border-value-top_style"><option> </option>';
							foreach($options as $option){
								if($option['value'] == $data['value']['top_style']){
									$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
								} else {
									$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
								}
							}
		$output .= '		</select> ' . __('top', 'themify') . '
						</span>
						<span class="pushlabel borders" style="display:block;">
							<span class="colorSelect" style="background-color:#'.$data['value']['right_color'].';"><span></span></span> <input type="text" value="'.$data['value']['right_color'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-right_color" class="width4 colorSelectInput" /> 
							<input type="text" class="width2 valid_num" value="'.$data['value']['right'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-right" /> <small>px</small>
							<select name="styling-'.$data['category'].'-'.$data['title'].'-border-value-right_style"><option> </option>';
							foreach($options as $option){
								if($option['value'] == $data['value']['right_style']){
									$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
								} else {
									$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
								}
							}
		$output .= '		</select> ' . __('right', 'themify') . '
						</span>
						<span class="pushlabel borders" style="display:block;">
							<span class="colorSelect" style="background-color:#'.$data['value']['bottom_color'].';"><span></span></span> <input type="text" value="'.$data['value']['bottom_color'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-bottom_color" class="width4 colorSelectInput" /> 
							<input type="text" class="width2 valid_num" value="'.$data['value']['bottom'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-bottom" /> <small>px</small>
							<select name="styling-'.$data['category'].'-'.$data['title'].'-border-value-bottom_style"><option> </option>';
							foreach($options as $option){
								if($option['value'] == $data['value']['bottom_style']){
									$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
								} else {
									$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
								}
							}
		$output .= '		</select> ' . __('bottom', 'themify') . '
						</span>
						<span class="pushlabel borders" style="display:block;">
							<span class="colorSelect" style="background-color:#'.$data['value']['left_color'].';"><span></span></span> <input type="text" value="'.$data['value']['left_color'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-left_color" class="width4 colorSelectInput" /> 
							<input type="text" class="width2 valid_num" value="'.$data['value']['left'].'" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-left" /> <small>px</small>
							<select name="styling-'.$data['category'].'-'.$data['title'].'-border-value-left_style"><option> </option>';
							foreach($options as $option){
								if($option['value'] == $data['value']['left_style']){
									$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
								} else {
									$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
								}
							}
		$output .= '		</select> ' . __('left', 'themify') . '
						</span>
					</span>
					</p>
					<p>
						<span class="pushlabel" style="display:block;">
							<input type="checkbox" class="border-switch" name="styling-'.$data['category'].'-'.$data['title'].'-border-value-checkbox" '.$checked.' /> ' . __('Same for all', 'themify') . '
						</span>
					</p>
				</div>';				
		return $output;
	}
	
	///////////////////////////////////////////
	// Position Module
	///////////////////////////////////////////
	function themify_position($data=array()){
		$data['value'] = $data['value']['value'];
		$options = array(
			array(
				'value' => 'static',
				'name' => __('static', 'themify')
			),
			array(
				'value' => 'fixed',
				'name' => __('fixed', 'themify')
			),
			array(
				'value' => 'relative',
				'name' => __('relative', 'themify')
			),
			array(
				'value' => 'absolute',
				'name' => __('absolute', 'themify')
			),
			
		);
		$options_x = array(
			array(
				'value' => 'top',
				'name' => __('top', 'themify')
			),
			array(
				'value' => 'bottom',
				'name' => __('bottom', 'themify')
			),			
		);
		$options_y = array(
			array(
				'value' => 'left',
				'name' => __('left', 'themify')
			),
			array(
				'value' => 'right',
				'name' => __('right', 'themify')
			)
		);
		if($data['value']['value'] != 'fixed' && $data['value']['value'] != 'absolute'){
			$display = "style='display:none;'";	
		}
		$output = '	<p><span class="label">' . __('Position', 'themify') . '</span>
					<select name="styling-'.$data['category'].'-'.$data['title'].'-position-value-value" class="select_position"><option> </option>';
		foreach($options as $option){
			if($option['value'] == $data['value']['value']){
				$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
			} else {
				$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
			}
		}
		$output .= '</select></p>
					<p class="position_display" '.$display.'>
						<span class="pushlabel" style="display:block;">
						<select name="styling-'.$data['category'].'-'.$data['title'].'-position-value-x"><option> </option>';
						foreach($options_x as $option){
							if($option['value'] == $data['value']['x']){
								$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
							} else {
								$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
							}
						}	
		$output .=	'	</select>
						<input type="text" class="width2 valid_num" value="'.$data['value']['x_value'].'" name="styling-'.$data['category'].'-'.$data['title'].'-position-value-x_value" /> <small>px</small> 
						</span>
						<span class="pushlabel" >
						<select name="styling-'.$data['category'].'-'.$data['title'].'-position-value-y"><option> </option>';
						foreach($options_y as $option){
							if($option['value'] == $data['value']['y']){
								$output .= '<option value="'.$option['value'].'" selected="selected">'.$option['name'].'</option>';	
							} else {
								$output .= '<option value="'.$option['value'].'">'.$option['name'].'</option>';	
							}
						}	
		$output .=	'	</select>
						<input type="text" class="width2 valid_num" value="'.$data['value']['y_value'].'" name="styling-'.$data['category'].'-'.$data['title'].'-position-value-y_value" /> <small>px</small> 
						</span>
					</p>';
		return $output;	
	}

/**
 * Outputs module for user to select whether to use a lightbox or not. The lightbox choices can be filtered using the 'themify_lightbox_module_options' filter in a custom-functions.php file.
 * @param array $data
 * @return string
 * @since 1.2.5
 */
function themify_gallery_plugins($data=array()){
	$data = themify_get_data();

	$display_options = apply_filters('themify_lightbox_module_options', array(
		__('prettyPhoto (lightbox)', 'themify') => 'prettyphoto',
		__('photoSwipe (fullscreen swipe)', 'themify') => 'photoswipe',
		__('None', 'themify') => 'none'
	));
	if($data['setting-single_lightbox']){
		$checked = "checked='checked'";
	}

	$output = '<p>
					<span class="label">' . __('Post Gallery', 'themify') . ' </span>
					<select name="setting-gallery_lightbox">';
					foreach($display_options as $option => $value){
						$output .= '<option value="'.$value.'" '.selected($value? $value: 'prettyPhoto', $data['setting-gallery_lightbox'], false).'>'.$option.'</option>';
					}
	$output .= '	</select>
				</p>';
	$output .= '<p>
					<span><input type="checkbox" name="setting-single_lightbox" '.$checked.'/> ' . __('Remove lightbox used for Lightbox Link fields', 'themify') . '</span>
				</p>';
	return $output;
}

/**
 * Template to display a link in Links module, also used when creating a link.
 * @param array $data
 * @return string
 * @since 1.2.7
 */
function themify_add_link_template($fid, $data = array(), $ajax = false){
	$pre = 'setting-link_';
	
	$title_name = $pre.'title_'.$fid;
	$title_val = isset($data[$title_name])? $data[$title_name] : '';
	
	$link_name = $pre.'link_'.$fid;
	$link_val = isset($data[$link_name])? $data[$link_name] : '';
	
	$img_name = $pre.'img_'.$fid;
	$img_val = '' == $data[$img_name] || !isset($data[$img_name]) ? '' : $data[$img_name];
	
	if($ajax){
		$hide = '';
	} else {
		$hide = '';
	}
	
	$field = '<li id="%s" class="social-link-item" %s>
				<div class="row">
					<span class="label">%s</span> <input type="text" name="%s" class="width6" value="%s">
				</div>
				<!-- /row -->
				<div class="row">
					<span class="label">%s</span> <input type="text" name="%s" class="width10" value="%s">
				</div>
				<!-- /row -->
				<div class="row">
					<span class="label">%s</span>
					<div class="uploader-fields image">
						<input type="text" id="%s" name="%s" class="width10" value="%s">
						<div class="clear image">%s</div>
					</div>
				</div>
				<!-- /row -->
				<div class="icon-preview">
					<img id="%s" src="%s" /> 
				</div>
				<!-- /icon-preview -->
				<a href="#" class="remove-item" data-removelink="%s">%s</a>
			</li>
			<!-- /social-links-item -->';

	$out = sprintf(
		$field, // field html template
			$fid, // link item ID
			$hide, // hide if it's called from ajax
			__('Title', 'themify'), $title_name, $title_val,
			__('Link', 'themify'), $link_name, $link_val,
			__('Image', 'themify'), $img_name, $img_name, $img_val,
			themify_get_uploader($img_name, array('tomedia' => true, 'preview' => true)),
			$img_name.'-preview', $img_val, // thumbnail
			$fid,
			__('Remove', 'themify')
	);
	return $out;
}

/**
 * Outputs module to manage links to be shown using the corresponding widget
 * @param array $data
 * @return string
 * @since 1.2.7
 */
function themify_manage_links($data=array()){
	$data = themify_get_data();
	$pre = 'setting-link_';
	$field_hash = $data[$pre.'field_hash']? $data[$pre.'field_hash'] : 5;
	$start = array();
	for ($i=0; $i < $field_hash; $i++) { $start['themify-link-'.$i] = 'themify-link-'.$i; }
	//$data[$pre.'field_ids'] = json_encode($start);
	
	if( json_decode($data[$pre.'field_ids']) ){
		$field_ids = json_decode($data[$pre.'field_ids']);
	} else {
		$field_ids = $start;
		
		$data[$pre.'title_themify-link-0'] = 'Twitter';
		$data[$pre.'title_themify-link-1'] = 'Facebook';
		$data[$pre.'title_themify-link-2'] = 'Google+';
		$data[$pre.'title_themify-link-3'] = 'YouTube';
		$data[$pre.'title_themify-link-4'] = 'Pinterest';
		
		$data[$pre.'link_themify-link-0'] = '';
		$data[$pre.'link_themify-link-1'] = '';
		$data[$pre.'link_themify-link-2'] = '';
		$data[$pre.'link_themify-link-3'] = '';
		$data[$pre.'link_themify-link-4'] = '';
		
		$data[$pre.'img_themify-link-0'] = THEMIFY_URI . '/img/social/twitter.png';
		$data[$pre.'img_themify-link-1'] = THEMIFY_URI . '/img/social/facebook.png';
		$data[$pre.'img_themify-link-2'] = THEMIFY_URI . '/img/social/google-plus.png';
		$data[$pre.'img_themify-link-3'] = THEMIFY_URI . '/img/social/youtube.png';
		$data[$pre.'img_themify-link-4'] = THEMIFY_URI . '/img/social/pinterest.png';
	}
	
	$out =  '<ul id="social-links-wrapper">';
		foreach($field_ids as $key => $fid){
			$out .= themify_add_link_template($fid, $data);
		}
	$out .= '</ul>';
	
	$out .= '<p class="add-social-link"><a href="#">' . __('Add Link', 'themify') . '</a></p>';
	$out .= '<p><small>' . sprintf(__('To display the links: go to Appearance > <a href="%s">Widgets</a> and drop a Themify - Social Links widget in a widget area (<a href="%s">learn more</a>)', 'themify'), admin_url('widgets.php'), 'http://themify.me/docs/social-media-links') . '</small></p>';
	$out .= '<input type="hidden" id="'.$pre.'field_ids" name="'.$pre.'field_ids" value=\''.json_encode($field_ids).'\'/>';
	$out .= '<input type="hidden" id="'.$pre.'field_hash" name="'.$pre.'field_hash" value="'.$field_hash.'"/>';
	//$out .= '<p>Fields: '.json_encode($field_ids).'</p><p>Hash: '.$field_hash.'</p>';
	
	return $out;
}
?>